---
description: 
globs: 
alwaysApply: false
---
# .cursorules - Guide de Construction Complet pour "Private Document AI"

## üéØ Objectif du Projet
Construire une application compl√®te et auto-h√©berg√©e permettant aux utilisateurs de "chatter" avec leurs propres documents. Le syst√®me doit √™tre priv√©, s√©curis√©, et d√©ploy√© sur DigitalOcean. L'automatisation du d√©ploiement via GitHub Actions est essentielle.
Tu as acc√®s au mcp de Github 

## üèõÔ∏è Principes d'Architecture
- **Monorepo :** Tous les composants (infrastructure, backend, workflows) seront dans un seul et m√™me d√©p√¥t Git pour faciliter la gestion et la coh√©rence.
- **Infrastructure as Code (IaC) :** Nous utiliserons Terraform pour d√©finir et provisionner notre serveur sur DigitalOcean de mani√®re reproductible.
- **Conteneurisation :** Tous les services (n8n, Ollama, ChromaDB) seront ex√©cut√©s dans des conteneurs Docker, orchestr√©s par un unique fichier `docker-compose.yml`.
- **CI/CD :** Un pipeline GitHub Actions automatisera le d√©ploiement. Chaque `push` sur la branche `main` mettra √† jour l'infrastructure et red√©ployera les applications.
- **Documentation Continue :** Tu g√©n√©reras et maintiendras une documentation claire dans le `README.md` au fur et √† mesure de la construction du projet.

---

##  PHASE 1 : Initialisation du Projet et Structure

### 1.1. Cr√©er la structure du Monorepo
Cr√©e les r√©pertoires et fichiers suivants √† la racine du projet :
- `.github/workflows/deploy.yml`
- `terraform/main.tf`
- `n8n_workflows/ingestion_workflow.json`
- `n8n_workflows/qa_workflow.json`
- `docker-compose.yml`
- `.gitignore`
- `README.md`

### 1.2. Remplir le fichier .gitignore
Remplis `.gitignore` avec le contenu suivant :
```.gitignore
# Fichiers de configuration locaux
.env
*.tfstate
*.tfstate.backup

# Fichiers Terraform
.terraform/
terraform.tfvars

# Logs et d√©pendances
node_modules
npm-debug.log
*.log

# Fichiers syst√®me
.DS_Store