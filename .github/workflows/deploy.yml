name: Deploy Private AI Stack to DigitalOcean

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      command:
        description: 'Optional command to run on the server'
        required: false
        default: 'deploy'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      droplet_ip: ${{ steps.terraform_apply.outputs.droplet_ip }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0
          terraform_wrapper: false

      - name: Authenticate to DigitalOcean & Run Terraform
        id: terraform_apply
        run: |
          cd terraform
          
          echo "Destroying existing infrastructure first..."
          terraform init
          terraform destroy -auto-approve -var="do_token=${{ secrets.DIGITALOCEAN_TOKEN }}" || echo "No existing infrastructure to destroy."

          echo "Applying new infrastructure..."
          terraform apply -auto-approve -var="do_token=${{ secrets.DIGITALOCEAN_TOKEN }}"
          
          DROPLET_IP=$(terraform output -json | jq -r '.droplet_ip_address.value')
          echo "droplet_ip=$DROPLET_IP" >> $GITHUB_OUTPUT

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Wait for SSH to be available
        run: |
          echo "Waiting for 60 seconds for the server to boot up..."
          sleep 60
      
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy Docker Compose file to Droplet
        uses: appleboy/scp-action@master
        with:
          host: ${{ needs.build.outputs.droplet_ip }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "/root"
          
      - name: Deploy Docker Stack on Droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ needs.build.outputs.droplet_ip }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Pausing for manual inspection. SSH into ${{ needs.build.outputs.droplet_ip }} as root."
            echo "The machine will be destroyed in 10 minutes."
            sleep 600
